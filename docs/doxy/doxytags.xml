<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="class">
    <name>veins::Agent</name>
    <filename>classveins_1_1_agent.html</filename>
    <member kind="function">
      <type></type>
      <name>Agent</name>
      <anchorfile>classveins_1_1_agent.html</anchorfile>
      <anchor>af3eaa0f91304516fba129e174afa0184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>getId</name>
      <anchorfile>classveins_1_1_agent.html</anchorfile>
      <anchor>aaa4e7653c55879456b59f102d95a5f59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classveins_1_1_agent.html</anchorfile>
      <anchor>a3a72cab8bed72ece825a92b197dce0d9</anchor>
      <arglist>(int64_t id)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>agentName</name>
      <anchorfile>classveins_1_1_agent.html</anchorfile>
      <anchor>a409f74492646575f5ec8c845a37e0080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int64_t</type>
      <name>id</name>
      <anchorfile>classveins_1_1_agent.html</anchorfile>
      <anchor>a60cc80d468edfbf73cbd31cec4629aca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::AgentPair</name>
    <filename>classveins_1_1_agent_pair.html</filename>
    <member kind="function">
      <type>Agent *</type>
      <name>getAgentD</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a29ec0ce3be7ebbcc8eb1f67805d36418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AgentPairMobility *</type>
      <name>getAgentPairMobility</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>ab480513c879b14f886baaf24996491b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Agent *</type>
      <name>getAgentS</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a52b5e6862493569594f23c698c749adf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCalcRadius</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>abecf3fce73e6bd395c174e17c08a53af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCommnunicationState</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a55fcfa884006561e519671678aecaee6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>simtime_t</type>
      <name>getCurrentTMsgReceiving</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a5afa37bedbdc48a6c7a4cbf66fb17a3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMessageTTime</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>abd2490797020c7ca8b044a5d7a690e44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>infoTrace</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>aa2f42aa0382a0fff67aa5322cc97d193</anchor>
      <arglist>(bool header)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>infoTraceRoutes</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>ab97821e76a40b06f44c72c3463e55809</anchor>
      <arglist>(bool header)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNeighbors</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a3849bdda0a707ada899d8c6d8bc9902f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAgentD</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a4df583b80eefb72c39adfaa4ff00d255</anchor>
      <arglist>(Agent *agentD)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAgentPairMobility</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a8085f00976774a07f2d72e204bf90e9f</anchor>
      <arglist>(AgentPairMobility *agentPairMobility)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAgentS</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a9ade17ac9bcdee473711bb089a9185bc</anchor>
      <arglist>(Agent *agentS)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommnunicationState</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a066adf4eeb63c4e2d7a4d1abc046e0bb</anchor>
      <arglist>(int commnunicationState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentTMsgReceiving</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>ace868a4438ddf06e605be6ca9234138c</anchor>
      <arglist>(simtime_t correntTMsgReceiving)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLastTMsgReceiving</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a9f64366a21da8882c955604ab65b6daa</anchor>
      <arglist>(simtime_t lastTMsgReceiving)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessageTTime</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>a85fd60c7a5aaea5259b2c53a7a220e22</anchor>
      <arglist>(double messageTTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNeighbors</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>ad9a2809038795b08d77d5e10e1f83a88</anchor>
      <arglist>(int neighbors)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>snr</name>
      <anchorfile>classveins_1_1_agent_pair.html</anchorfile>
      <anchor>ac272e0294ff3ee048f7ee36a42b3d5ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::AgentPairList</name>
    <filename>classveins_1_1_agent_pair_list.html</filename>
    <member kind="function">
      <type>double</type>
      <name>calcMaxDistancelr</name>
      <anchorfile>classveins_1_1_agent_pair_list.html</anchorfile>
      <anchor>a31d1fd1f0b2979f7d3a6e0e5092d6756</anchor>
      <arglist>(int64_t agent)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>calcMaxSlr</name>
      <anchorfile>classveins_1_1_agent_pair_list.html</anchorfile>
      <anchor>ac6e3c30302f6efc4cbb4a244f4608823</anchor>
      <arglist>(int64_t agent)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>calcMinDistancelr</name>
      <anchorfile>classveins_1_1_agent_pair_list.html</anchorfile>
      <anchor>a66edd3cb1fd8b7a27ccbd32f26f1f373</anchor>
      <arglist>(int64_t agent)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>calcMinSlr</name>
      <anchorfile>classveins_1_1_agent_pair_list.html</anchorfile>
      <anchor>a27a919b691defd872f0c3185821f1f9d</anchor>
      <arglist>(int64_t agent)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::AgentPairMobility</name>
    <filename>classveins_1_1_agent_pair_mobility.html</filename>
    <base>veins::MobilityInfo</base>
    <member kind="function">
      <type></type>
      <name>AgentPairMobility</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a363ebcfedd90ee0d334ce86ca4a4fc65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AgentPairMobility</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a320df4e46ebbd261e5f978dee17fbc2e</anchor>
      <arglist>(AgentPair *c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>calcRelativeSpeed</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>afd62de0c8eb0f59069e962e3df9565c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDistancelr</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a6c305a0159809696a706cb299274c104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDistancelr</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a496d39c25bc5384e8a9973d83ece8206</anchor>
      <arglist>(Move *l, Move *r)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getLastDistancelr</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>ad01ae4e5089a03a5bd70909ed0f7d788</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>info</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a1dfb3f31bba99c035046ee60d809332f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>infoTrace</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a64f2638cf06002d3095bc3b0c4fa8b9d</anchor>
      <arglist>(bool header)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateAgentPairMobility</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>ad354facb6606d4b9e8a3695fa64c991f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AgentPairMobility</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>ad155cfdff1ca215f554ca72eb1bda2fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AgentPair *</type>
      <name>c</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>afeb95efa440c9524d2aad940353aacfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>relativeSpeed</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a7b75592742b3b763beec9be9781589b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>relativeSpeedAngleRad</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>ab29e9b0fb545c5c634af1155f41d2c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>relativeSpeedX</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a891b79d301135877cee824e9e2ce58f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>relativeSpeedY</name>
      <anchorfile>classveins_1_1_agent_pair_mobility.html</anchorfile>
      <anchor>a9ccdf38d9843b78bc1eecc6a797c440a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::CommInfo</name>
    <filename>classveins_1_1_comm_info.html</filename>
  </compound>
  <compound kind="class">
    <name>CommPerformance</name>
    <filename>class_comm_performance.html</filename>
  </compound>
  <compound kind="class">
    <name>CommState</name>
    <filename>class_comm_state.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::ForwardingNode</name>
    <filename>classveins_1_1_forwarding_node.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::GeneralCommunicationService</name>
    <filename>classveins_1_1_general_communication_service.html</filename>
  </compound>
  <compound kind="class">
    <name>IcarApp</name>
    <filename>class_icar_app.html</filename>
    <member kind="function">
      <type>double</type>
      <name>calcDelaySendLoadApp</name>
      <anchorfile>class_icar_app.html</anchorfile>
      <anchor>ae039dce6ec48c9501df21c688bf5750b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadApp</name>
      <anchorfile>class_icar_app.html</anchorfile>
      <anchor>a94db0049561ced46f3e5ec20d3fbd360</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scheduleLoadApp</name>
      <anchorfile>class_icar_app.html</anchorfile>
      <anchor>aa090f1325680fbb45bf172378de08e13</anchor>
      <arglist>(double appPeriod, int AppTypeId, char *name, cMessage *m1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::IcarContext</name>
    <filename>classveins_1_1_icar_context.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::IcarMonitor</name>
    <filename>classveins_1_1_icar_monitor.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::Icarqoc</name>
    <filename>classveins_1_1_icarqoc.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>msgInfoTraceTransmitting</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>a5f1e6285cdc604288fa86d5e5de70e9a</anchor>
      <arglist>(ICMessage *wsm, std::string event, std::string ruleRoute, bool header, simtime_t eventTime)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sendDown</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>a814881b132e99ed173a8d9df957f17c0</anchor>
      <arglist>(cMessage *msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>changeLocalMobility</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>afcd0b1515688798306130eea655df704</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleLowerMsg</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>a962ec770cf5f1fdc6ffe9fcc0211c400</anchor>
      <arglist>(cMessage *wsm) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>handleSelfMsg</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>a443ae3c27f696c26f04664f0d02d4b6d</anchor>
      <arglist>(cMessage *msg) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ICMessage *</type>
      <name>prepareWSM</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>aa8c084960a0fb6825294446bbfa8785f</anchor>
      <arglist>(int lengthBits, AgentPair agentPair, int priority)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendForwardMessage</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>a50a6b240caaf24a491d27b7891a0b6f7</anchor>
      <arglist>(ICMessage *pWsm)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendMessageApplication</name>
      <anchorfile>classveins_1_1_icarqoc.html</anchorfile>
      <anchor>aa19066f3e4dbac27ff349cf6b79aaf8f</anchor>
      <arglist>(ForwardingNode *fowardNode, int64_t destination, double timetoLiveApp, unsigned int pMsgType, int64_t lastNodeNext, int64_t lastNextNodeRequestMsg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::ICarRoute</name>
    <filename>classveins_1_1_i_car_route.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::IcarRouting</name>
    <filename>classveins_1_1_icar_routing.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::ICRNode</name>
    <filename>classveins_1_1_i_c_r_node.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::KnownGlobal</name>
    <filename>classveins_1_1_known_global.html</filename>
    <member kind="function">
      <type>stringstream</type>
      <name>getFilePreFix</name>
      <anchorfile>classveins_1_1_known_global.html</anchorfile>
      <anchor>aa4a510dbabcae01c3b8151a73f576f4a</anchor>
      <arglist>(int idVehicle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::LocalAgent</name>
    <filename>classveins_1_1_local_agent.html</filename>
    <base>veins::Agent</base>
  </compound>
  <compound kind="class">
    <name>LocalAgentCommPerformance</name>
    <filename>class_local_agent_comm_performance.html</filename>
    <base>CommPerformance</base>
  </compound>
  <compound kind="class">
    <name>veins::LocalCommInfo</name>
    <filename>classveins_1_1_local_comm_info.html</filename>
    <base>veins::CommInfo</base>
  </compound>
  <compound kind="class">
    <name>veins::LocalMobility</name>
    <filename>classveins_1_1_local_mobility.html</filename>
    <base>veins::MobilityInfo</base>
    <member kind="function">
      <type>std::string</type>
      <name>moveInfoTrace</name>
      <anchorfile>classveins_1_1_local_mobility.html</anchorfile>
      <anchor>aa60d29feef9095b628bd38bdba51528c</anchor>
      <arglist>(bool header)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::LocalMobilityTraci</name>
    <filename>classveins_1_1_local_mobility_traci.html</filename>
    <member kind="function">
      <type>double</type>
      <name>getAntennaPositionOffset</name>
      <anchorfile>classveins_1_1_local_mobility_traci.html</anchorfile>
      <anchor>af976239131146e4092777fce906e2121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getExternal_id</name>
      <anchorfile>classveins_1_1_local_mobility_traci.html</anchorfile>
      <anchor>a4187ef6b9ef94dac2e558167b4877c0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>simtime_t</type>
      <name>getLastUpdate</name>
      <anchorfile>classveins_1_1_local_mobility_traci.html</anchorfile>
      <anchor>ac82bb95cc7aac08a6075cf30f11565e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextAngle</name>
      <anchorfile>classveins_1_1_local_mobility_traci.html</anchorfile>
      <anchor>a79f82c70a8f13e3f83dd886ca039a6a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getNextRoad_id</name>
      <anchorfile>classveins_1_1_local_mobility_traci.html</anchorfile>
      <anchor>a5617a63870e4759501d63d660c30073f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Coord</type>
      <name>getNextRoadPosition</name>
      <anchorfile>classveins_1_1_local_mobility_traci.html</anchorfile>
      <anchor>ac8778b3aa60f25e342a9f4639bb0c772</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextSpeed</name>
      <anchorfile>classveins_1_1_local_mobility_traci.html</anchorfile>
      <anchor>a541c046bc7cef7ff2e7fc27a4b5093c1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::MessageManager</name>
    <filename>classveins_1_1_message_manager.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::MobilityInfo</name>
    <filename>classveins_1_1_mobility_info.html</filename>
    <member kind="function">
      <type>float</type>
      <name>getMaxSpeed</name>
      <anchorfile>classveins_1_1_mobility_info.html</anchorfile>
      <anchor>a76384d91650021900eb5a4482aa90b42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>infoTrace</name>
      <anchorfile>classveins_1_1_mobility_info.html</anchorfile>
      <anchor>ab8ac96bedd054215afde3c2a70623a24</anchor>
      <arglist>(bool header, std::string idagent)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>moveInfoTrace</name>
      <anchorfile>classveins_1_1_mobility_info.html</anchorfile>
      <anchor>a20603e2f2900766ccf735b747ed4e491</anchor>
      <arglist>(bool header)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Move *</type>
      <name>actualMove</name>
      <anchorfile>classveins_1_1_mobility_info.html</anchorfile>
      <anchor>a1ba04f865e43c584a60f9ec484078da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Move *</type>
      <name>collectedMove</name>
      <anchorfile>classveins_1_1_mobility_info.html</anchorfile>
      <anchor>ab181651edbf2b793d4e3cafa998c4f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Move *</type>
      <name>lastMove</name>
      <anchorfile>classveins_1_1_mobility_info.html</anchorfile>
      <anchor>a7d164e1eba955a0f21470402a6cf954e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::QoCAgentPair</name>
    <filename>classveins_1_1_qo_c_agent_pair.html</filename>
    <base>veins::QoCInfo</base>
  </compound>
  <compound kind="class">
    <name>veins::QoCInfo</name>
    <filename>classveins_1_1_qo_c_info.html</filename>
  </compound>
  <compound kind="class">
    <name>RadiusEstimatorAgentPair</name>
    <filename>class_radius_estimator_agent_pair.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::RemoteAgent</name>
    <filename>classveins_1_1_remote_agent.html</filename>
    <base>veins::Agent</base>
  </compound>
  <compound kind="class">
    <name>veins::RemoteAgentCommInfo</name>
    <filename>classveins_1_1_remote_agent_comm_info.html</filename>
    <base>veins::CommInfo</base>
  </compound>
  <compound kind="class">
    <name>RemoteAgentCommPerformance</name>
    <filename>class_remote_agent_comm_performance.html</filename>
    <base>CommPerformance</base>
  </compound>
  <compound kind="class">
    <name>veins::RemoteAgentGroup</name>
    <filename>classveins_1_1_remote_agent_group.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::RemoteAgentQoC</name>
    <filename>classveins_1_1_remote_agent_qo_c.html</filename>
    <base>veins::QoCInfo</base>
  </compound>
  <compound kind="class">
    <name>veins::RemoteMobility</name>
    <filename>classveins_1_1_remote_mobility.html</filename>
    <base>veins::MobilityInfo</base>
  </compound>
  <compound kind="class">
    <name>veins::Route</name>
    <filename>classveins_1_1_route.html</filename>
  </compound>
  <compound kind="class">
    <name>veins::Routing</name>
    <filename>classveins_1_1_routing.html</filename>
  </compound>
  <compound kind="class">
    <name>Timeliness</name>
    <filename>class_timeliness.html</filename>
    <member kind="function">
      <type>std::string</type>
      <name>infoTrace</name>
      <anchorfile>class_timeliness.html</anchorfile>
      <anchor>a85e61b773cb4c7272aeed1f29f4d1c13</anchor>
      <arglist>(bool header)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>veins::TimelinessAgentPair</name>
    <filename>classveins_1_1_timeliness_agent_pair.html</filename>
    <base>Timeliness</base>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>%Veins.</title>
    <filename>index.html</filename>
  </compound>
</tagfile>
